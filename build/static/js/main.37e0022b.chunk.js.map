{"version":3,"sources":["components/appHeader/AppHeader.js","components/error/error.gif","components/error/Error.js","resources/img/mjolnir.png","services/MarverService.js","components/spinner/spinner.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","Error","style","display","width","height","objectFit","margin","src","img","alt","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlns","background","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","RandomChar","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","onError","updateChart","Math","floor","random","then","catch","this","errorMessage","spinner","content","onClick","mjolnir","Component","View","slice","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","length","arr","item","imgStyle","props","onCharSelected","renderItems","disabled","Skeleton","CharInfo","updateChar","charId","prevProps","skeleton","i","ErrorBoundary","errorInfo","console","log","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37e0022b.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\nconst Error = () =>{\r\n    return (\r\n        <img  style={{display:\"block\", width: '250px', height:\"250px\", objectFit:'contain', margin:\"0 auto\" }}src={img} alt=\"Error\"/>\r\n    )\r\n}\r\nexport default Error","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","class MarvelService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=047d2ee5d5bb7afd9043bb08abdc6b9b';\r\n    _baseOffset = 210;\r\n     getResource = async (url) => {\r\n        let res = await fetch(url);\r\n        if(!res.ok){\r\n            throw new Error('error');\r\n        }\r\n        return await res.json();\r\n    }\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n        return res.data.results.map(this._transformCharacter)\r\n\r\n    }\r\n     getCharacter = async (id) => {\r\n      const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n      return this._transformCharacter(res.data.results[0])\r\n    }\r\n    _transformCharacter = (char) => {\r\n         return {\r\n             id: char.id,\r\n             name: char.name,\r\n             description: char.description,\r\n             thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n             homepage: char.urls[0].url,\r\n             wiki: char.urls[1].url,\r\n             comics: char.comics.items\r\n         }\r\n    }\r\n}\r\nexport default MarvelService","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n                <g transform=\"rotate(0)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n                <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n                    <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                    <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n                </circle>\r\n            </g>\r\n        </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n                <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n                    <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                    <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n                </circle>\r\n            </g>\r\n        </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n                <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n                    <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                    <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n                </circle>\r\n            </g>\r\n        </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n                <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n                    <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                    <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n                </circle>\r\n            </g>\r\n        </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n                <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n                    <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                    <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n                </circle>\r\n            </g>\r\n        </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n                <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n                    <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                    <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n                </circle>\r\n            </g>\r\n        </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n                <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n                    <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                    <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n                </circle>\r\n            </g>\r\n        </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import {Component} from \"react\";\nimport './randomChar.scss';\nimport Error from \"../error/Error\";\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport MarvelService from \"../../services/MarverService\";\nimport Spinner from \"../spinner/spinner\";\n\nclass RandomChar extends Component{\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n    marvelService = new MarvelService()\n    componentDidMount() {\n        this.updateChart();\n        // this.timerId =  setInterval(this.updateChart, 3000)\n    }\n    componentWillUnmount() {\n        // clearInterval(this.timerId)\n    }\n    onCharLoaded = (char) => {\n        this.setState({char, loading: false})\n    }\n    onCharLoading = () => {\n        this.setState({loading: true})\n    }\n    onError = () => {\n        this.setState({loading: false, error: true})\n    }\n    updateChart = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        this.onCharLoading()\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n    render() {\n        const {char, loading, error} = this.state\n        const  errorMessage = error ? <Error/> : null\n        const spinner = loading ? <Spinner/> : null\n        const content = !(loading || error) ? <View char={char}/> : null\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button onClick={this.updateChart} className=\"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\nconst View = ({char}) => {\n    const { name, description, thumbnail, homepage, wiki } = char\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\"/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description ?`${description.slice(0,199) + '...'}` : 'description is not found' }\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default RandomChar;","import {Component} from \"react\";\nimport './charList.scss';\nimport MarvelService from \"../../services/MarverService\";\nimport Spinner from \"../spinner/spinner\";\nimport Error from \"../error/Error\";\n\nclass CharList extends Component{\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 210,\n        charEnded: false\n    }\n    marvelService = new MarvelService()\n    componentDidMount() {\n        this.onRequest()\n    }\n    onRequest = (offset) => {\n        this.onCharListLoading()\n        this.marvelService.getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError)\n    }\n    onCharListLoading = () =>{\n        this.setState({\n            newItemLoading: true\n        })\n    }\n    onCharListLoaded = (newCharList) => {\n        let ended = false\n        if(newCharList.length < 9){\n            ended = true\n        }\n        this.setState(({offset, charList}) => ({\n                charList: [...charList, ...newCharList],\n                loading: false,\n                newItemLoading:false,\n                onCharListLoading:false,\n                offset: offset + 9,\n                charEnded: ended,\n        }))\n    }\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n    renderItems(arr){\n        const items = arr.map((item) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            return(\n                <li className=\"char__item\" key={item.id}\n                onClick={() => this.props.onCharSelected(item.id)}\n                >\n                    <img  src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                    <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        })\n        return(\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n    render() {\n        const {charList, loading, error, newItemLoading, offset, charEnded} = this.state;\n        const items = this.renderItems(charList);\n        const errorMessage = error ? <Error/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? items : null;\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button className=\"button button__main button__long\"\n                onClick={()=>this.onRequest(offset)}\n                disabled={newItemLoading}\n                style={{'display': charEnded ? 'none' : 'block'}}\n                >\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import {Component} from \"react\";\nimport PropTypes from 'prop-types';\nimport './charInfo.scss';\nimport MarvelService from \"../../services/MarverService\";\nimport Spinner from \"../spinner/spinner\";\nimport Error from \"../error/Error\";\nimport Skeleton from '../skeleton/Skeleton'\n\nclass CharInfo extends Component{\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n    marvelService = new MarvelService()\n    componentDidMount() {\n        this.updateChar();\n        // this.timerId =  setInterval(this.updateChart, 3000)\n    }\n    componentDidUpdate(prevProps) {\n        if(this.props.charId !== prevProps.charId){\n            this.updateChar()\n        }\n    }\n    updateChar = () => {\n        const {charId} = this.props\n        if(!charId){\n            return;\n        }\n        this.onCharLoading()\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n    onCharLoaded = (char) => {\n        this.setState({char, loading: false})\n    }\n    onCharLoading = () => {\n        this.setState({loading: true})\n    }\n    onError = () => {\n        this.setState({loading: false, error: true})\n    }\n    render() {\n        const { char, loading, error} = this.state\n        const skeleton =  char || loading || error ? null : <Skeleton/>\n        const errorMessage = error ? <Error/> : null\n        const spinner = loading ? <Spinner/> : null\n        const content = !(loading || error || !char) ? <View char={char}/> : null\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'unset'};\n    }\n    return(\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There is no comics with this character'}\n                {\n                    comics.map((item, i)=>{\n                        // eslint-disable-next-line\n                        if(i > 9) return;\n                        return(\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\nexport default CharInfo;","import {Component} from \"react\";\r\nimport Error from \"../error/Error\";\r\nclass ErrorBoundary extends  Component {\r\n    state = {\r\n        error: false\r\n    }\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error,errorInfo)\r\n        this.setState({error: true})\r\n    }\r\n    render() {\r\n        if(this.state.error){\r\n            return <Error/>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\nexport default ErrorBoundary","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import {Component} from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\nimport decoration from '../../resources/img/vision.png';\nclass App extends Component{\n    state = {\n        selectedChar: null\n    }\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar/>\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n\n                        <CharList onCharSelected={this.onCharSelected} />\n\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar} />\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}